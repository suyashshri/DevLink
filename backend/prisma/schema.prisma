// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  clerkId   String    @unique
  username  String    @unique
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Project   Project[]
  File      File[]
}

model Project {
  id          String        @id @default(uuid())
  name        String
  description String?
  visibility  String        @default("private")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ownerId     String
  owner       User          @relation(fields: [ownerId], references: [id])
  EnvVariable EnvVariable[]
  File        File[]
  Folder      Folder[]
}

// model Repository {
//   id        String   @id @default(uuid())
//   name      String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   projectId String
//   project   Project  @relation(fields: [projectId], references: [id])
//   File      File[]
// }

model Folder {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  parentFolderId String?
  parentFolder   Folder? @relation("FolderHierarchy", fields: [parentFolderId], references: [id])

  subFolders Folder[] @relation("FolderHierarchy")
  files      File[]
}

model File {
  id             String   @id @default(uuid())
  name           String
  pathS3Url      String
  version        Int      @default(1)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  isLocked       Boolean  @default(false)
  lockedById     String?
  lockedBy       User?    @relation(fields: [lockedById], references: [id])
  projectId      String
  project        Project  @relation(fields: [projectId], references: [id])
  parentFolderId String?
  parentFolder   Folder?  @relation(fields: [parentFolderId], references: [id])
}

model EnvVariable {
  id        String   @id @default(uuid())
  key       String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
}
